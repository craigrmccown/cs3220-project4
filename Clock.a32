; Addresses for I/O
.NAME	HEX = 0xFFFFF000
.NAME	LEDR = 0xFFFFF020
.NAME	KEY = 0xFFFFF080
.NAME	SW = 0xFFFFF090
.NAME	TCNT = 0xFFFFF100
.NAME	TLIM = 0xFFFF0104
.NAME	TCTRL = 0xFFFF0108
.NAME   CLOCKADDR = 0x00008000

.ORIG 0x100

; Set initial register values
;
; T0 is seconds
; T1 is minutes
; T2 is hours
; T3 is device addresses
; T4 is timer limit
Init:
XOR		Zero,Zero,Zero          ; Set Zero register to 0
ADDI    T0,Zero,0x50            ; Set seconds to 50
ADDI    T1,Zero,0x59            ; Set minutes to 59
ADDI    T2,Zero,0x23            ; Set hours to 23
CALL    DisplayClock(Zero)      ; Display clock value
LW      T3,TLimAddr(Zero)       ; Load timer limit address
ADDI	T4,Zero,1000            ; Set timer limit to 1000
SW		T4,0(T3)                ; Store 1000 as the timer limit
LW      T3,TCtrlAddr(Zero)      ; Load timer control address

; Main clock loop
;
; T0 is seconds
; T1 is minutes
; T2 is hours
; T3 is timer control address
; T4 is timer control value
ClockLoop:
LW		T4,0(T3)                ; Load current timer control bits
BEQ		T4,Zero,ClockLoop       ; Loop unless a second has passed
CALL    IncClock(Zero)          ; Increment clock every second
CALL    DisplayClock(Zero)      ; Display clock value
LW      T3,TCtrlAddr(Zero)      ; Load timer control address
SW      Zero,0(T3)              ; Clear ready bit
BR      ClockLoop               ; Loop forever

; Displays the current time on the HEX display
;
; T0 is seconds
; T1 is minutes
; T2 is hours
; T3 is shifted minutes
; T4 is shifted hours
; T5 is clock value
DisplayClock:
ADD     T3,T1,T1                ; Shifted minutes = minutes x 2
ADD     T3,T3,T3                ; Shifted minutes = minutes x 4
ADD     T4,T2,T2                ; Shifted hours = hours x 2
ADD     T4,T4,T4                ; Shifted hours = hours x 4 
ADD     T4,T4,T4                ; Shifted hours = hours x 8
OR      T5,T0,T3                ; Clock value contains seconds and minutes
OR      T5,T5,T4                ; Clock value contains seconds, minutes, and hours
SW      T5,HEX(Zero)            ; Display the clock value on the HEX pins
RET

; Increments clock value
;
; T0 is seconds
; T1 is minutes
; T2 is hours
; T3 is overflow value
; T4 is current digit
IncClock:
ADDI    T3,Zero,0x59            ; Set overflow value to 59
BEQ     T3,T0,IncMin            ; Go to IncMin if there are 59 seconds
ADDI    T3,Zero,0x9             ; Set overflow value to 9
ADD     T4,Zero,T0              ; Set current digit to seconds
ANDI    T4,T4,0xF               ; Mask to get least significant digit
BEQ     T3,T4,SecOverflow       ; Go to SecOverflow if the least significant digit is 9
ADDI    T0,T0,1                 ; Otherwise, increment seconds
RET

SecOverflow:
ADDI    T0,T0,0x10              ; Add 10 seconds
ANDI    T0,T0,0xF0              ; Set least significant digit to 0
RET

IncMin:
XOR     T0,T0,T0                ; Clear seconds
ADDI    T3,Zero,0x59            ; Set overflow value to 59
BEQ     T3,T1,IncHour           ; Go to IncHour if there are 59 minutes
ADDI    T3,Zero,0x9             ; Set overflow value to 9
ADD     T4,Zero,T1              ; Set current digit to minutes
ANDI    T4,T4,0xF               ; Mask to get least significant digit
BEQ     T3,T4,MinOverflow       ; Go to MinOverflow if the least significant digit is 9
ADDI    T1,T1,1                 ; Otherwise, increment minutes
RET

MinOverflow:
ADDI    T1,T1,0x10              ; Add 10 minutes
ANDI    T1,T1,0xF0              ; Set least significant digit to 0
RET

IncHour:
XOR     T1,T1,T1                ; Clear minutes
ADDI    T3,Zero,0x23            ; Set overflow value to 23
BEQ     T3,T2,Rollover          ; Go to Rollover if there are 23 hours
ADDI    T3,Zero,0x9             ; Set overflow value to 9
ADD     T4,Zero,T2              ; Set current digit to hours
ANDI    T4,T4,0xF               ; Mask to get least significant digit
BEQ     T3,T4,HourOverflow      ; Go to HourOverflow if the least significant digit is 9
ADDI    T2,T2,1                 ; Otherwise, increment hours
RET

HourOverflow:
ADDI    T2,T2,0x10              ; Add 10 hours
ANDI    T2,T2,0xF0              ; Set least significant digit to 0
RET

Rollover:
XOR     T2,T2,T2                ; Clear hours
RET

; Static data
TLimAddr:
.WORD TLIM
TCtrlAddr:
.WORD TCTRL
ClockValAddr:
.WORD CLOCKADDR 
